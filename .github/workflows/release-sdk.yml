name: Add SDK assets to release

on:
  release:
    types:
      - published

jobs:
  build-sdk:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        host-os:
          - 'macos'
        host-os-version:
          - '13'
        host-arch:
          - 'x86_64'
          - 'arm64'
        target-arch:
          - 'x86_64'
          - 'arm64'
        target-os:
          - 'ubuntu'
        target-os-version:
          - '22.04'
    runs-on: ${{ matrix.host-os }}-${{ matrix.host-os-version }}
    steps:
      - uses: ffried/swift-cross-compilation-sdk-bundles/actions/bundle-name@main
        id: bundle-names
        with:
          swift-version: ${{ github.ref_name }}
          host-os: ${{ matrix.host-os }}
          host-os-version: ${{ matrix.host-os-version }}
          host-arch: ${{ matrix.host-arch }}
          target-os: ${{ matrix.target-os }}
          target-os-version: ${{ matrix.target-os-version }}
          target-arch: ${{ matrix.target-arch }}
      - name: Check for existing asset
        id: existing-asset
        env:
          REPO: ${{ github.repository }}
          RELEASE_NAME: ${{ github.ref_name }}
          ASSET_NAME: ${{ steps.bundle-names.outputs.full-name }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          FOUND="$(gh release view --repo "${REPO}" "${RELEASE_NAME}" --json assets --jq ".assets | map(.label) | contains([\"${ASSET_NAME}\"]))")"
          echo "found=${FOUND}" >> "${GITHUB_OUTPUT}"
      - uses: ffried/swift-cross-compilation-sdk-bundles/actions/generate-cross-compilation-sdk@main
        if: ${{ steps.existing-asset.outputs.found != 'true' }}
        id: generate-sdk
        with:
          swift-version: ${{ github.ref_name }}
          host-os: ${{ matrix.host-os }}
          host-os-version: ${{ matrix.host-os-version }}
          host-arch: ${{ matrix.host-arch }}
          target-os: ${{ matrix.target-os }}
          target-os-version: ${{ matrix.target-os-version }}
          target-arch: ${{ matrix.target-arch }}
      - name: Upload asset
        if: ${{ steps.existing-asset.outputs.found != 'true' }}
        env:
          REPO: ${{ github.repository }}
          RELEASE_NAME: ${{ github.ref_name }}
          ASSET_PATH: ${{ steps.generate-sdk.outputs.bundle-package-path }}
          ASSET_NAME: ${{ steps.bundle-names.outputs.full-name }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload --repo "${REPO}" --clobber "${RELEASE_NAME}" "${ASSET_PATH}#${ASSET_NAME}"
